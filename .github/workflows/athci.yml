name: Build and Push Jitsi Meet

on:
  workflow_dispatch:

jobs:
  build-and-push:
    name: Build Debian Package and Docker Image
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-node@v4
      with:
        node-version-file: '.nvmrc'
        cache: 'npm'
    
    - name: Check Node / npm versions
      run: |
        node -v
        npm -v
    
    - name: Install build dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y debhelper devscripts build-essential
    
    - name: Install npm dependencies
      run: npm install
    
    - name: Run make
      run: make
    
    - name: Build Debian package
      run: |
        dpkg-buildpackage -b -rfakeroot -us -uc
        mkdir -p docker-build
        mv ../*.deb docker-build/
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Create Dockerfile
      run: |
        cat << EOF > docker-build/Dockerfile
        ARG JITSI_REPO=jitsi
        ARG BASE_TAG=latest
        FROM \${JITSI_REPO}/base:\${BASE_TAG}
        
        LABEL org.opencontainers.image.title="Athenia AI Meet"
        LABEL org.opencontainers.image.description="WebRTC compatible scalable video conferences."
        LABEL org.opencontainers.image.url="https://atheniaai.com/"
        LABEL org.opencontainers.image.source="https://github.com/atheniaai/"
        LABEL org.opencontainers.image.documentation="https://atheniaai.github.io/"
        
        ADD https://raw.githubusercontent.com/acmesh-official/acme.sh/3.0.7/acme.sh /opt
        COPY rootfs/ /
        
        # Copy the locally built deb package
        COPY *.deb /tmp/
        
        RUN apt-dpkg-wrap apt-get update && \
            apt-dpkg-wrap apt-get install -y dnsutils cron nginx-extras socat curl jq && \
            dpkg -i /tmp/*.deb && \
            apt-dpkg-wrap apt-get install -f && \
            mv /usr/share/jitsi-meet/interface_config.js /defaults && \
            rm -f /etc/nginx/conf.d/default.conf && \
            rm -f /tmp/*.deb && \
            apt-cleanup
        
        EXPOSE 80 443
        VOLUME ["/config", "/usr/share/jitsi-meet/transcripts"]
        EOF
    
    - name: Copy rootfs
      run: cp -r rootfs docker-build/
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: docker-build
        push: true
        tags: |
          atheniaai/meet:latest
          atheniaai/meet:1.0.1
